{"version":3,"sources":["component/ContactList/ContactList.module.css","component/ContactForm/ContactForm.module.css","component/Filter/Filter.module.css","App.module.css","component/ContactList/ContactList.jsx","component/ContactForm/ContactForm.jsx","component/Filter/Filter.jsx","App.jsx","index.js"],"names":["module","exports","ContactList","data","onDelete","className","s","list","map","el","item","text","name","number","onClick","id","type","ContactForm","state","this","props","onChange","onSubmit","form","pattern","title","required","Component","Filter","App","contacts","filter","ev","setState","target","value","handleFilterChange","getFilteredContacts","normalizedFilter","toLowerCase","contact","includes","prevState","handleSubmit","preventDefault","isDoubleName","some","alert","nanoid","container","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2d0ceb8e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__3ecp_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__19vbz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Filter_btn__XuNiV\",\"btnList\":\"Filter_btnList__2Fm1s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\"};","import PropTypes from 'prop-types';\nimport s from './ContactList.module.css';\n\nconst ContactList = ({ data, onDelete }) => {\n  return (\n    <>\n      <ul className={s.list}>\n        {data.map(el => {\n          return (\n            <li key={el.id} className={s.item}>\n              <p className={s.text}>\n                {el.name}: {el.number}\n              </p>\n              <button onClick={onDelete} id={el.number} type=\"button\">\n                Delete\n              </button>\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n};\n\nContactList.propTypes = {\n  data: PropTypes.array.isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import s from './ContactForm.module.css';\nimport { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  render() {\n    const { onChange, onSubmit } = this.props;\n    return (\n      <form className={s.form} onSubmit={onSubmit}>\n        <h3>Name</h3>\n        <input\n          onChange={onChange}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n        <h3>Number</h3>\n        <input\n          onChange={onChange}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n        <button type=\"submit\">Add contact</button>\n      </form>\n    );\n  }\n}\n\nContactForm.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default ContactForm;\n","import s from './Filter.module.css';\nimport PropTypes from 'prop-types';\n\nconst Filter = ({ onChange }) => {\n  return (\n    <>\n      <h4 className={s.title}>Find contacts by name</h4>\n      <input\n        onChange={onChange}\n        type=\"text\"\n        name=\"filter\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n      />\n    </>\n  );\n};\n\nFilter.propTypes = {\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import { Component } from 'react';\nimport { nanoid } from 'nanoid';\nimport ContactList from './component/ContactList';\nimport ContactForm from './component/ContactForm';\nimport Filter from './component/Filter';\nimport s from './App.module.css';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    name: '',\n    number: '',\n    filter: '',\n  };\n  onChange = ev => {\n    this.setState({ [ev.target.name]: ev.target.value });\n  };\n\n  handleFilterChange = ev => this.setState({ filter: ev.target.value });\n  getFilteredContacts = () => {\n    const { contacts, filter } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n  onDelete = ev => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(item => item.number !== ev.target.id),\n    }));\n  };\n\n  handleSubmit = ev => {\n    ev.preventDefault();\n    const isDoubleName = this.state.contacts.some(\n      el => el.name === this.state.name,\n    );\n    if (isDoubleName) {\n      alert(`${this.state.name} is already in contacts`);\n    }\n    if (!isDoubleName) {\n      this.setState(prevState => ({\n        contacts: [\n          ...prevState.contacts,\n          {\n            name: prevState.name,\n            id: nanoid(),\n            number: prevState.number,\n          },\n        ],\n      }));\n    }\n  };\n\n  render() {\n    return (\n      <div className={s.container}>\n        <h1>Phonebook</h1>\n        <ContactForm onChange={this.onChange} onSubmit={this.handleSubmit} />\n        <h2>Contacts</h2>\n        <Filter onChange={this.handleFilterChange} />\n        <ContactList\n          data={this.getFilteredContacts()}\n          onDelete={this.onDelete}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// // If you want to start measuring performance in your app, pass a function\n// // to log results (for example: reportWebVitals(console.log))\n// // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}